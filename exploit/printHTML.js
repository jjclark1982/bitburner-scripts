export async function main(ns) {
    const svgEl = render(template);
    logHTML(ns, svgEl);

    await ns.asleep(1000);
    setValues(svgEl, {circ: 100});
    await ns.asleep(60*1000);
}

const template = `
<svg version="1.1"
     width="300" height="200"
     xmlns="http://www.w3.org/2000/svg">

  <rect width="100%" height="100%" fill="red" />

  <circle name="circ" data-target="r" cx="150" cy="100" r="80" fill="green" />

  <text x="150" y="125" font-size="60" text-anchor="middle" fill="white">SVG</text>

</svg>
`;

export function logHTML(ns, el) {
    ns.tail();
    const doc = eval("document");
    const command = [ns.getScriptName(), ...ns.args].join(' ');
    const logEl = doc.querySelector(`[title="${command} "]`).parentElement.parentElement.nextElementSibling.querySelector('.MuiBox-root')
    logEl.appendChild(el);
}

export function render(template='', globals, locals) {
    const context = Object.assign({}, globals, locals);

    const doc = eval("document");
    const container = doc.createElement('div');
    const html = template.innerHTML || template;
    container.innerHTML = html.trim();
    const el = container.firstChild;

    setValues(el, context);

    return el;
}

function setValues(el, context) {
    Object.keys(context).forEach(function(name){
        const value = context[name];
        const selector = '[name="'+name+'"]'; // e.g.: [name="team1_color"]
        for (const item of el.querySelectorAll(selector)) {
            setValue(item, value);
        }
        if (el.matches(selector)) {
            setValue(el, value);
        }
    });
}

function setValue(el, value) {
    // TODO: consider supporting 'data-index' for compound values
    var target = el.getAttribute('data-target') || 'value';
    if (target == 'value') {
        // when no 'data-target' is given, set the 'value' which varies by tag
        if (el.tagName == 'INPUT') {
            if (el.type == 'checkbox') {
                el.checked = !!value;
            }
            else {
                el.value = value;
            }
        }
        else {
            if ('textContent' in el) {
                el.textContent = value;
            }
            else {
                el.innerText = value; // IE8 support
            }
        }
    }
    else {
        var parts = target.split('.');
        if (parts.length == 1) {
            // when some 'data-target' is given, set that attribute
            // e.g.: <name="banner_size" data-target="width"> would run
            //       el.width = value;
            el.setAttribute(target, value);
        }
        else {
            // but if 'data-target' has more than one part, drill down to set it
            // e.g.: <name="banner_size" data-target="style.width"> would run
            //       el.style.width = value;
            var cursor = el;
            while (parts.length > 1) {
                cursor = cursor[parts.shift()];
            }
            cursor[parts[0]] = value;
        }
    }
}
